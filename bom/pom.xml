<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.oasp.java.dev</groupId>
    <artifactId>oasp4j</artifactId>
    <version>dev-SNAPSHOT</version>
  </parent>
  <groupId>io.oasp.java</groupId>
  <artifactId>oasp4j-bom</artifactId>
  <version>${oasp4j.version}</version>
  <packaging>pom</packaging>
  <name>${project.artifactId}</name>
  <description>Dependencies (BOM) of the Open Application Standard Platform for Java (OASP4J) based on spring boot.</description>
  <url>http://oasp.io/oasp4j/</url>
  <inceptionYear>2014</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <cxf.version>3.1.6</cxf.version>
    <oasp.gpg.keyname>joerg.hohwiller@capgemini.com</oasp.gpg.keyname>
    <oasp.flatten.mode>bom</oasp.flatten.mode>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- *** EXTERNAL DEPENDENCIES *** -->
      <!-- JSR 250 for component/bean lifecycle management -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>jsr250-api</artifactId>
        <version>1.0</version>
      </dependency>
      <!-- JSR 330 for dependency injection -->
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>
      <!-- JSR 250 for common annotations (component-bean lifecycle, security, etc.) -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.2</version>
      </dependency>
      <!-- Library with general utilities -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>17.0</version>
      </dependency>
      <!-- Library with general utilities as well as I18N and exception support -->
      <dependency>
        <groupId>net.sf.m-m-m</groupId>
        <artifactId>mmm-util-core</artifactId>
        <version>7.0.0</version>
      </dependency>
      <!-- Library with advanced collection support -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>4.1</version>
      </dependency>
      <!-- Support for money datatype including operations/calculations -->
      <dependency>
        <groupId>org.javamoney</groupId>
        <artifactId>moneta</artifactId>
        <version>0.8</version>
      </dependency>
      <!-- Java Persistence API (2.x not available in groupId javax.persistence) -->
      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.1-api</artifactId>
        <version>1.0.0.Final</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-envers</artifactId>
        <version>4.3.5.Final</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>3.1</version>
      </dependency>
      <!-- Support for dynamic and type-safe JPA queries -->
      <dependency>
        <groupId>com.mysema.querydsl</groupId>
        <artifactId>querydsl-jpa</artifactId>
        <version>3.4.3</version>
      </dependency>
      <!-- DataBase Connection Pooling -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-dbcp2</artifactId>
        <version>2.0.1</version>
      </dependency>
      <!-- Logging API -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.7</version>
      </dependency>
      <!-- Servlet API -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
        <scope>provided</scope>
      </dependency>
      <!-- Servlet Taglib -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.2</version>
      </dependency>
      <!-- JAX-RS API for REST services -->
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.0.1</version>
      </dependency>
      <!-- CXF for REST and Webservices -->
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxws</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-service-description</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-http</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-local</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-client</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <!-- Jackson for JSON mapping -->
      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
        <version>2.4.2</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.3.3</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.3.3</version>
      </dependency>
      <!-- Dozer for bean-mapping/conversion (Alternative to Orika) -->
      <dependency>
        <groupId>net.sf.dozer</groupId>
        <artifactId>dozer</artifactId>
        <version>5.5.1</version>
      </dependency>
      <!-- Orika for bean-mapping/conversion (Alternative to Dozer) -->
      <dependency>
        <groupId>ma.glasnost.orika</groupId>
        <artifactId>orika-core</artifactId>
        <version>1.4.6</version>
      </dependency>
      <!-- JSR303 API for annotation based validation -->
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>1.1.0.Final</version>
      </dependency>

      <!-- *** optional TEST DEPENDENCIES *** -->
      <!-- JUnit for Test-Case definition and execution -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>
      <!-- AssertJ for smart assertions -->
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>2.0.0</version>
      </dependency>
      <!-- Mocking framework for mocks in unit tests -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>1.9.5</version>
      </dependency>
      <!-- Wiremock for mocking network communication -->
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock</artifactId>
        <version>1.54</version>
      </dependency>

      <!-- Dependencies for testing constraint validation -->
      <dependency>
        <groupId>javax.el</groupId>
        <artifactId>javax.el-api</artifactId>
        <version>2.2.4</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.web</groupId>
        <artifactId>javax.el</artifactId>
        <version>2.2.6</version>
      </dependency>

      <!-- *** INTERNAL DEPENDENCIES *** -->
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-test</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-logging</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-basic</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-batch</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-beanmapping</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-configuration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-security</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-rest</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-jpa</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-jpa-envers</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oasp.java.modules</groupId>
        <artifactId>oasp4j-web</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

</project>
